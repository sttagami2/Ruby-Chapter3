20200304
〜第3章〜

◆学習の目標
・文字や整数の「型」について詳しく学ぶ
→ 文字の出力や計算を行う際に、「型」が重要となる
→ 型が異なると思ったような実行結果が得られない

◆3章の目次
・putsの使い方
・型とは
・文字列型、整数型の型変換

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
Putsの使い方
新たなプログラミング言語を学習する時に決まってやることがある
それは「Hello, World!」という文字列を画面上に出力するということ
Rubyではどうやって記述するのでしょうか？

	puts 'Hello, World!'
もしくは
	puts "Hello, World!"


Putsは「受け取った値を文字列として出力」する働き
このように何らかの処理をさせる命令を「メソッド」という

メソッドの後に続く記述を「引数」という


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
型とは
プログラミングする際に使用する文字や数字には型があります。

型の種類
・文字列型(String)
・整数型(Integer)

見た目では差が分からないが、文字同士を組み合わせたい時や計算を行いたい時に型が異なるとエラーとなる？

	puts 5 + 3		→	8
	puts "5 + 3"		→	5 + 3
	puts "5" + "3"		→	53





ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
文字列型、整数型の型変換

◆整数型（数字） → 文字列型（文字）への変換方法
(数字).to_s	例：24.to_s → 24（整数型）から24（文字列型）へ変更した
と記述することで整数型から文字列型に変換できる

◆文字列型（文字） → 整数型（数字）への変換方法
"文字".to_i
と記述することで文字列型から整数型に変換できる

〜田上的感想〜
・Toは英語のtoと同じ意味で「〜へ」という意味かなと思った
・toの後のsはstring（文字列型）
・toの後のIはinteger（整数型）



ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー







ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー